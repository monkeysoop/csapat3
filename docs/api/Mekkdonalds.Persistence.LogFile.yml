### YamlMime:ManagedReference
items:
- uid: Mekkdonalds.Persistence.LogFile
  commentId: T:Mekkdonalds.Persistence.LogFile
  id: LogFile
  parent: Mekkdonalds.Persistence
  children:
  - Mekkdonalds.Persistence.LogFile.#ctor
  - Mekkdonalds.Persistence.LogFile.ActionModel
  - Mekkdonalds.Persistence.LogFile.ActualPaths
  - Mekkdonalds.Persistence.LogFile.AllValid
  - Mekkdonalds.Persistence.LogFile.Errors
  - Mekkdonalds.Persistence.LogFile.Events
  - Mekkdonalds.Persistence.LogFile.Makespan
  - Mekkdonalds.Persistence.LogFile.NumTaskFinished
  - Mekkdonalds.Persistence.LogFile.PlannerPaths
  - Mekkdonalds.Persistence.LogFile.PlannerTimes
  - Mekkdonalds.Persistence.LogFile.Start
  - Mekkdonalds.Persistence.LogFile.SumOfCost
  - Mekkdonalds.Persistence.LogFile.Tasks
  - Mekkdonalds.Persistence.LogFile.TeamSize
  langs:
  - csharp
  - vb
  name: LogFile
  nameWithType: LogFile
  fullName: Mekkdonalds.Persistence.LogFile
  type: Class
  source:
    remote:
      path: src/MekkdonaldsModel/Persistence/LogFile.cs
      branch: feature/looks
      repo: git@szofttech.inf.elte.hu:szofttech-ab-2024/group-07/csapat3.git
    id: LogFile
    path: ../src/MekkdonaldsModel/Persistence/LogFile.cs
    startLine: 8
  assemblies:
  - MekkdonaldsModel
  namespace: Mekkdonalds.Persistence
  syntax:
    content: public class LogFile
    content.vb: Public Class LogFile
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Mekkdonalds.Persistence.LogFile.ActionModel
  commentId: P:Mekkdonalds.Persistence.LogFile.ActionModel
  id: ActionModel
  parent: Mekkdonalds.Persistence.LogFile
  langs:
  - csharp
  - vb
  name: ActionModel
  nameWithType: LogFile.ActionModel
  fullName: Mekkdonalds.Persistence.LogFile.ActionModel
  type: Property
  source:
    remote:
      path: src/MekkdonaldsModel/Persistence/LogFile.cs
      branch: feature/looks
      repo: git@szofttech.inf.elte.hu:szofttech-ab-2024/group-07/csapat3.git
    id: ActionModel
    path: ../src/MekkdonaldsModel/Persistence/LogFile.cs
    startLine: 10
  assemblies:
  - MekkdonaldsModel
  namespace: Mekkdonalds.Persistence
  syntax:
    content: public required string ActionModel { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ActionModel As String
  overload: Mekkdonalds.Persistence.LogFile.ActionModel*
- uid: Mekkdonalds.Persistence.LogFile.AllValid
  commentId: P:Mekkdonalds.Persistence.LogFile.AllValid
  id: AllValid
  parent: Mekkdonalds.Persistence.LogFile
  langs:
  - csharp
  - vb
  name: AllValid
  nameWithType: LogFile.AllValid
  fullName: Mekkdonalds.Persistence.LogFile.AllValid
  type: Property
  source:
    remote:
      path: src/MekkdonaldsModel/Persistence/LogFile.cs
      branch: feature/looks
      repo: git@szofttech.inf.elte.hu:szofttech-ab-2024/group-07/csapat3.git
    id: AllValid
    path: ../src/MekkdonaldsModel/Persistence/LogFile.cs
    startLine: 12
  assemblies:
  - MekkdonaldsModel
  namespace: Mekkdonalds.Persistence
  syntax:
    content: >-
      [JsonConverter(typeof(YesNoConverter))]

      public bool AllValid { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <JsonConverter(GetType(YesNoConverter))>

      Public Property AllValid As Boolean
  overload: Mekkdonalds.Persistence.LogFile.AllValid*
  attributes:
  - type: System.Text.Json.Serialization.JsonConverterAttribute
    ctor: System.Text.Json.Serialization.JsonConverterAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: Mekkdonalds.Persistence.Converters.YesNoConverter
- uid: Mekkdonalds.Persistence.LogFile.TeamSize
  commentId: P:Mekkdonalds.Persistence.LogFile.TeamSize
  id: TeamSize
  parent: Mekkdonalds.Persistence.LogFile
  langs:
  - csharp
  - vb
  name: TeamSize
  nameWithType: LogFile.TeamSize
  fullName: Mekkdonalds.Persistence.LogFile.TeamSize
  type: Property
  source:
    remote:
      path: src/MekkdonaldsModel/Persistence/LogFile.cs
      branch: feature/looks
      repo: git@szofttech.inf.elte.hu:szofttech-ab-2024/group-07/csapat3.git
    id: TeamSize
    path: ../src/MekkdonaldsModel/Persistence/LogFile.cs
    startLine: 14
  assemblies:
  - MekkdonaldsModel
  namespace: Mekkdonalds.Persistence
  syntax:
    content: public int TeamSize { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property TeamSize As Integer
  overload: Mekkdonalds.Persistence.LogFile.TeamSize*
- uid: Mekkdonalds.Persistence.LogFile.Start
  commentId: P:Mekkdonalds.Persistence.LogFile.Start
  id: Start
  parent: Mekkdonalds.Persistence.LogFile
  langs:
  - csharp
  - vb
  name: Start
  nameWithType: LogFile.Start
  fullName: Mekkdonalds.Persistence.LogFile.Start
  type: Property
  source:
    remote:
      path: src/MekkdonaldsModel/Persistence/LogFile.cs
      branch: feature/looks
      repo: git@szofttech.inf.elte.hu:szofttech-ab-2024/group-07/csapat3.git
    id: Start
    path: ../src/MekkdonaldsModel/Persistence/LogFile.cs
    startLine: 15
  assemblies:
  - MekkdonaldsModel
  namespace: Mekkdonalds.Persistence
  syntax:
    content: >-
      [JsonConverter(typeof(StartPosConverter))]

      public required List<(Point, Direction)> Start { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.ValueTuple{System.Drawing.Point,Mekkdonalds.Simulation.Direction}}
    content.vb: >-
      <JsonConverter(GetType(StartPosConverter))>

      Public Property Start As List(Of (Point, Direction))
  overload: Mekkdonalds.Persistence.LogFile.Start*
  attributes:
  - type: System.Text.Json.Serialization.JsonConverterAttribute
    ctor: System.Text.Json.Serialization.JsonConverterAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: Mekkdonalds.Persistence.Converters.StartPosConverter
- uid: Mekkdonalds.Persistence.LogFile.NumTaskFinished
  commentId: P:Mekkdonalds.Persistence.LogFile.NumTaskFinished
  id: NumTaskFinished
  parent: Mekkdonalds.Persistence.LogFile
  langs:
  - csharp
  - vb
  name: NumTaskFinished
  nameWithType: LogFile.NumTaskFinished
  fullName: Mekkdonalds.Persistence.LogFile.NumTaskFinished
  type: Property
  source:
    remote:
      path: src/MekkdonaldsModel/Persistence/LogFile.cs
      branch: feature/looks
      repo: git@szofttech.inf.elte.hu:szofttech-ab-2024/group-07/csapat3.git
    id: NumTaskFinished
    path: ../src/MekkdonaldsModel/Persistence/LogFile.cs
    startLine: 18
  assemblies:
  - MekkdonaldsModel
  namespace: Mekkdonalds.Persistence
  syntax:
    content: public int NumTaskFinished { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property NumTaskFinished As Integer
  overload: Mekkdonalds.Persistence.LogFile.NumTaskFinished*
- uid: Mekkdonalds.Persistence.LogFile.SumOfCost
  commentId: P:Mekkdonalds.Persistence.LogFile.SumOfCost
  id: SumOfCost
  parent: Mekkdonalds.Persistence.LogFile
  langs:
  - csharp
  - vb
  name: SumOfCost
  nameWithType: LogFile.SumOfCost
  fullName: Mekkdonalds.Persistence.LogFile.SumOfCost
  type: Property
  source:
    remote:
      path: src/MekkdonaldsModel/Persistence/LogFile.cs
      branch: feature/looks
      repo: git@szofttech.inf.elte.hu:szofttech-ab-2024/group-07/csapat3.git
    id: SumOfCost
    path: ../src/MekkdonaldsModel/Persistence/LogFile.cs
    startLine: 19
  assemblies:
  - MekkdonaldsModel
  namespace: Mekkdonalds.Persistence
  syntax:
    content: public int SumOfCost { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property SumOfCost As Integer
  overload: Mekkdonalds.Persistence.LogFile.SumOfCost*
- uid: Mekkdonalds.Persistence.LogFile.Makespan
  commentId: P:Mekkdonalds.Persistence.LogFile.Makespan
  id: Makespan
  parent: Mekkdonalds.Persistence.LogFile
  langs:
  - csharp
  - vb
  name: Makespan
  nameWithType: LogFile.Makespan
  fullName: Mekkdonalds.Persistence.LogFile.Makespan
  type: Property
  source:
    remote:
      path: src/MekkdonaldsModel/Persistence/LogFile.cs
      branch: feature/looks
      repo: git@szofttech.inf.elte.hu:szofttech-ab-2024/group-07/csapat3.git
    id: Makespan
    path: ../src/MekkdonaldsModel/Persistence/LogFile.cs
    startLine: 20
  assemblies:
  - MekkdonaldsModel
  namespace: Mekkdonalds.Persistence
  syntax:
    content: public int Makespan { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Makespan As Integer
  overload: Mekkdonalds.Persistence.LogFile.Makespan*
- uid: Mekkdonalds.Persistence.LogFile.ActualPaths
  commentId: P:Mekkdonalds.Persistence.LogFile.ActualPaths
  id: ActualPaths
  parent: Mekkdonalds.Persistence.LogFile
  langs:
  - csharp
  - vb
  name: ActualPaths
  nameWithType: LogFile.ActualPaths
  fullName: Mekkdonalds.Persistence.LogFile.ActualPaths
  type: Property
  source:
    remote:
      path: src/MekkdonaldsModel/Persistence/LogFile.cs
      branch: feature/looks
      repo: git@szofttech.inf.elte.hu:szofttech-ab-2024/group-07/csapat3.git
    id: ActualPaths
    path: ../src/MekkdonaldsModel/Persistence/LogFile.cs
    startLine: 21
  assemblies:
  - MekkdonaldsModel
  namespace: Mekkdonalds.Persistence
  syntax:
    content: >-
      [JsonConverter(typeof(PathConverter))]

      public required List<List<Action>> ActualPaths { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.Collections.Generic.List{Mekkdonalds.Simulation.Action}}
    content.vb: >-
      <JsonConverter(GetType(PathConverter))>

      Public Property ActualPaths As List(Of List(Of Action))
  overload: Mekkdonalds.Persistence.LogFile.ActualPaths*
  attributes:
  - type: System.Text.Json.Serialization.JsonConverterAttribute
    ctor: System.Text.Json.Serialization.JsonConverterAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: Mekkdonalds.Persistence.Converters.PathConverter
- uid: Mekkdonalds.Persistence.LogFile.PlannerPaths
  commentId: P:Mekkdonalds.Persistence.LogFile.PlannerPaths
  id: PlannerPaths
  parent: Mekkdonalds.Persistence.LogFile
  langs:
  - csharp
  - vb
  name: PlannerPaths
  nameWithType: LogFile.PlannerPaths
  fullName: Mekkdonalds.Persistence.LogFile.PlannerPaths
  type: Property
  source:
    remote:
      path: src/MekkdonaldsModel/Persistence/LogFile.cs
      branch: feature/looks
      repo: git@szofttech.inf.elte.hu:szofttech-ab-2024/group-07/csapat3.git
    id: PlannerPaths
    path: ../src/MekkdonaldsModel/Persistence/LogFile.cs
    startLine: 23
  assemblies:
  - MekkdonaldsModel
  namespace: Mekkdonalds.Persistence
  syntax:
    content: >-
      [JsonConverter(typeof(PathConverter))]

      public required List<List<Action>> PlannerPaths { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.Collections.Generic.List{Mekkdonalds.Simulation.Action}}
    content.vb: >-
      <JsonConverter(GetType(PathConverter))>

      Public Property PlannerPaths As List(Of List(Of Action))
  overload: Mekkdonalds.Persistence.LogFile.PlannerPaths*
  attributes:
  - type: System.Text.Json.Serialization.JsonConverterAttribute
    ctor: System.Text.Json.Serialization.JsonConverterAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: Mekkdonalds.Persistence.Converters.PathConverter
- uid: Mekkdonalds.Persistence.LogFile.PlannerTimes
  commentId: P:Mekkdonalds.Persistence.LogFile.PlannerTimes
  id: PlannerTimes
  parent: Mekkdonalds.Persistence.LogFile
  langs:
  - csharp
  - vb
  name: PlannerTimes
  nameWithType: LogFile.PlannerTimes
  fullName: Mekkdonalds.Persistence.LogFile.PlannerTimes
  type: Property
  source:
    remote:
      path: src/MekkdonaldsModel/Persistence/LogFile.cs
      branch: feature/looks
      repo: git@szofttech.inf.elte.hu:szofttech-ab-2024/group-07/csapat3.git
    id: PlannerTimes
    path: ../src/MekkdonaldsModel/Persistence/LogFile.cs
    startLine: 25
  assemblies:
  - MekkdonaldsModel
  namespace: Mekkdonalds.Persistence
  syntax:
    content: public required List<double> PlannerTimes { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.Double}
    content.vb: Public Property PlannerTimes As List(Of Double)
  overload: Mekkdonalds.Persistence.LogFile.PlannerTimes*
- uid: Mekkdonalds.Persistence.LogFile.Errors
  commentId: P:Mekkdonalds.Persistence.LogFile.Errors
  id: Errors
  parent: Mekkdonalds.Persistence.LogFile
  langs:
  - csharp
  - vb
  name: Errors
  nameWithType: LogFile.Errors
  fullName: Mekkdonalds.Persistence.LogFile.Errors
  type: Property
  source:
    remote:
      path: src/MekkdonaldsModel/Persistence/LogFile.cs
      branch: feature/looks
      repo: git@szofttech.inf.elte.hu:szofttech-ab-2024/group-07/csapat3.git
    id: Errors
    path: ../src/MekkdonaldsModel/Persistence/LogFile.cs
    startLine: 26
  assemblies:
  - MekkdonaldsModel
  namespace: Mekkdonalds.Persistence
  syntax:
    content: >-
      [JsonConverter(typeof(ErrorConverter))]

      public required List<(int, int, int, string)> Errors { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.ValueTuple{System.Int32,System.Int32,System.Int32,System.String}}
    content.vb: >-
      <JsonConverter(GetType(ErrorConverter))>

      Public Property Errors As List(Of (Integer, Integer, Integer, String))
  overload: Mekkdonalds.Persistence.LogFile.Errors*
- uid: Mekkdonalds.Persistence.LogFile.Events
  commentId: P:Mekkdonalds.Persistence.LogFile.Events
  id: Events
  parent: Mekkdonalds.Persistence.LogFile
  langs:
  - csharp
  - vb
  name: Events
  nameWithType: LogFile.Events
  fullName: Mekkdonalds.Persistence.LogFile.Events
  type: Property
  source:
    remote:
      path: src/MekkdonaldsModel/Persistence/LogFile.cs
      branch: feature/looks
      repo: git@szofttech.inf.elte.hu:szofttech-ab-2024/group-07/csapat3.git
    id: Events
    path: ../src/MekkdonaldsModel/Persistence/LogFile.cs
    startLine: 28
  assemblies:
  - MekkdonaldsModel
  namespace: Mekkdonalds.Persistence
  syntax:
    content: >-
      [JsonConverter(typeof(EventConverter))]

      public required List<List<(int, int, string)>> Events { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.Collections.Generic.List{System.ValueTuple{System.Int32,System.Int32,System.String}}}
    content.vb: >-
      <JsonConverter(GetType(EventConverter))>

      Public Property Events As List(Of List(Of (Integer, Integer, String)))
  overload: Mekkdonalds.Persistence.LogFile.Events*
- uid: Mekkdonalds.Persistence.LogFile.Tasks
  commentId: P:Mekkdonalds.Persistence.LogFile.Tasks
  id: Tasks
  parent: Mekkdonalds.Persistence.LogFile
  langs:
  - csharp
  - vb
  name: Tasks
  nameWithType: LogFile.Tasks
  fullName: Mekkdonalds.Persistence.LogFile.Tasks
  type: Property
  source:
    remote:
      path: src/MekkdonaldsModel/Persistence/LogFile.cs
      branch: feature/looks
      repo: git@szofttech.inf.elte.hu:szofttech-ab-2024/group-07/csapat3.git
    id: Tasks
    path: ../src/MekkdonaldsModel/Persistence/LogFile.cs
    startLine: 30
  assemblies:
  - MekkdonaldsModel
  namespace: Mekkdonalds.Persistence
  syntax:
    content: >-
      [JsonConverter(typeof(TaskConverter))]

      public required List<(int, int, int)> Tasks { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.ValueTuple{System.Int32,System.Int32,System.Int32}}
    content.vb: >-
      <JsonConverter(GetType(TaskConverter))>

      Public Property Tasks As List(Of (Integer, Integer, Integer))
  overload: Mekkdonalds.Persistence.LogFile.Tasks*
- uid: Mekkdonalds.Persistence.LogFile.#ctor
  commentId: M:Mekkdonalds.Persistence.LogFile.#ctor
  id: '#ctor'
  parent: Mekkdonalds.Persistence.LogFile
  langs:
  - csharp
  - vb
  name: LogFile()
  nameWithType: LogFile.LogFile()
  fullName: Mekkdonalds.Persistence.LogFile.LogFile()
  type: Constructor
  source:
    remote:
      path: src/MekkdonaldsModel/Persistence/LogFile.cs
      branch: feature/looks
      repo: git@szofttech.inf.elte.hu:szofttech-ab-2024/group-07/csapat3.git
    id: .ctor
    path: ../src/MekkdonaldsModel/Persistence/LogFile.cs
    startLine: 34
  assemblies:
  - MekkdonaldsModel
  namespace: Mekkdonalds.Persistence
  syntax:
    content: >-
      [JsonConstructor]

      public LogFile()
    content.vb: >-
      <JsonConstructor>

      Public Sub New()
  overload: Mekkdonalds.Persistence.LogFile.#ctor*
  attributes:
  - type: System.Text.Json.Serialization.JsonConstructorAttribute
    ctor: System.Text.Json.Serialization.JsonConstructorAttribute.#ctor
    arguments: []
  nameWithType.vb: LogFile.New()
  fullName.vb: Mekkdonalds.Persistence.LogFile.New()
  name.vb: New()
references:
- uid: Mekkdonalds.Persistence
  commentId: N:Mekkdonalds.Persistence
  href: Mekkdonalds.html
  name: Mekkdonalds.Persistence
  nameWithType: Mekkdonalds.Persistence
  fullName: Mekkdonalds.Persistence
  spec.csharp:
  - uid: Mekkdonalds
    name: Mekkdonalds
    href: Mekkdonalds.html
  - name: .
  - uid: Mekkdonalds.Persistence
    name: Persistence
    href: Mekkdonalds.Persistence.html
  spec.vb:
  - uid: Mekkdonalds
    name: Mekkdonalds
    href: Mekkdonalds.html
  - name: .
  - uid: Mekkdonalds.Persistence
    name: Persistence
    href: Mekkdonalds.Persistence.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Mekkdonalds.Persistence.LogFile.ActionModel*
  commentId: Overload:Mekkdonalds.Persistence.LogFile.ActionModel
  href: Mekkdonalds.Persistence.LogFile.html#Mekkdonalds_Persistence_LogFile_ActionModel
  name: ActionModel
  nameWithType: LogFile.ActionModel
  fullName: Mekkdonalds.Persistence.LogFile.ActionModel
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Mekkdonalds.Persistence.LogFile.AllValid*
  commentId: Overload:Mekkdonalds.Persistence.LogFile.AllValid
  href: Mekkdonalds.Persistence.LogFile.html#Mekkdonalds_Persistence_LogFile_AllValid
  name: AllValid
  nameWithType: LogFile.AllValid
  fullName: Mekkdonalds.Persistence.LogFile.AllValid
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Mekkdonalds.Persistence.LogFile.TeamSize*
  commentId: Overload:Mekkdonalds.Persistence.LogFile.TeamSize
  href: Mekkdonalds.Persistence.LogFile.html#Mekkdonalds_Persistence_LogFile_TeamSize
  name: TeamSize
  nameWithType: LogFile.TeamSize
  fullName: Mekkdonalds.Persistence.LogFile.TeamSize
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Mekkdonalds.Persistence.LogFile.Start*
  commentId: Overload:Mekkdonalds.Persistence.LogFile.Start
  href: Mekkdonalds.Persistence.LogFile.html#Mekkdonalds_Persistence_LogFile_Start
  name: Start
  nameWithType: LogFile.Start
  fullName: Mekkdonalds.Persistence.LogFile.Start
- uid: System.Collections.Generic.List{System.ValueTuple{System.Drawing.Point,Mekkdonalds.Simulation.Direction}}
  commentId: T:System.Collections.Generic.List{System.ValueTuple{System.Drawing.Point,Mekkdonalds.Simulation.Direction}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<(Point, Direction)>
  nameWithType: List<(Point, Direction)>
  fullName: System.Collections.Generic.List<(System.Drawing.Point, Mekkdonalds.Simulation.Direction)>
  nameWithType.vb: List(Of (Point, Direction))
  fullName.vb: System.Collections.Generic.List(Of (System.Drawing.Point, Mekkdonalds.Simulation.Direction))
  name.vb: List(Of (Point, Direction))
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: (
  - uid: System.Drawing.Point
    name: Point
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.drawing.point
  - name: ','
  - name: " "
  - uid: Mekkdonalds.Simulation.Direction
    name: Direction
    href: Mekkdonalds.Simulation.Direction.html
  - name: )
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: (
  - uid: System.Drawing.Point
    name: Point
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.drawing.point
  - name: ','
  - name: " "
  - uid: Mekkdonalds.Simulation.Direction
    name: Direction
    href: Mekkdonalds.Simulation.Direction.html
  - name: )
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Mekkdonalds.Persistence.LogFile.NumTaskFinished*
  commentId: Overload:Mekkdonalds.Persistence.LogFile.NumTaskFinished
  href: Mekkdonalds.Persistence.LogFile.html#Mekkdonalds_Persistence_LogFile_NumTaskFinished
  name: NumTaskFinished
  nameWithType: LogFile.NumTaskFinished
  fullName: Mekkdonalds.Persistence.LogFile.NumTaskFinished
- uid: Mekkdonalds.Persistence.LogFile.SumOfCost*
  commentId: Overload:Mekkdonalds.Persistence.LogFile.SumOfCost
  href: Mekkdonalds.Persistence.LogFile.html#Mekkdonalds_Persistence_LogFile_SumOfCost
  name: SumOfCost
  nameWithType: LogFile.SumOfCost
  fullName: Mekkdonalds.Persistence.LogFile.SumOfCost
- uid: Mekkdonalds.Persistence.LogFile.Makespan*
  commentId: Overload:Mekkdonalds.Persistence.LogFile.Makespan
  href: Mekkdonalds.Persistence.LogFile.html#Mekkdonalds_Persistence_LogFile_Makespan
  name: Makespan
  nameWithType: LogFile.Makespan
  fullName: Mekkdonalds.Persistence.LogFile.Makespan
- uid: Mekkdonalds.Persistence.LogFile.ActualPaths*
  commentId: Overload:Mekkdonalds.Persistence.LogFile.ActualPaths
  href: Mekkdonalds.Persistence.LogFile.html#Mekkdonalds_Persistence_LogFile_ActualPaths
  name: ActualPaths
  nameWithType: LogFile.ActualPaths
  fullName: Mekkdonalds.Persistence.LogFile.ActualPaths
- uid: System.Collections.Generic.List{System.Collections.Generic.List{Mekkdonalds.Simulation.Action}}
  commentId: T:System.Collections.Generic.List{System.Collections.Generic.List{Mekkdonalds.Simulation.Action}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<List<Action>>
  nameWithType: List<List<Action>>
  fullName: System.Collections.Generic.List<System.Collections.Generic.List<Mekkdonalds.Simulation.Action>>
  nameWithType.vb: List(Of List(Of Action))
  fullName.vb: System.Collections.Generic.List(Of System.Collections.Generic.List(Of Mekkdonalds.Simulation.Action))
  name.vb: List(Of List(Of Action))
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Mekkdonalds.Simulation.Action
    name: Action
    href: Mekkdonalds.Simulation.Action.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Mekkdonalds.Simulation.Action
    name: Action
    href: Mekkdonalds.Simulation.Action.html
  - name: )
  - name: )
- uid: Mekkdonalds.Persistence.LogFile.PlannerPaths*
  commentId: Overload:Mekkdonalds.Persistence.LogFile.PlannerPaths
  href: Mekkdonalds.Persistence.LogFile.html#Mekkdonalds_Persistence_LogFile_PlannerPaths
  name: PlannerPaths
  nameWithType: LogFile.PlannerPaths
  fullName: Mekkdonalds.Persistence.LogFile.PlannerPaths
- uid: Mekkdonalds.Persistence.LogFile.PlannerTimes*
  commentId: Overload:Mekkdonalds.Persistence.LogFile.PlannerTimes
  href: Mekkdonalds.Persistence.LogFile.html#Mekkdonalds_Persistence_LogFile_PlannerTimes
  name: PlannerTimes
  nameWithType: LogFile.PlannerTimes
  fullName: Mekkdonalds.Persistence.LogFile.PlannerTimes
- uid: System.Collections.Generic.List{System.Double}
  commentId: T:System.Collections.Generic.List{System.Double}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<double>
  nameWithType: List<double>
  fullName: System.Collections.Generic.List<double>
  nameWithType.vb: List(Of Double)
  fullName.vb: System.Collections.Generic.List(Of Double)
  name.vb: List(Of Double)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: )
- uid: Mekkdonalds.Persistence.LogFile.Errors*
  commentId: Overload:Mekkdonalds.Persistence.LogFile.Errors
  href: Mekkdonalds.Persistence.LogFile.html#Mekkdonalds_Persistence_LogFile_Errors
  name: Errors
  nameWithType: LogFile.Errors
  fullName: Mekkdonalds.Persistence.LogFile.Errors
- uid: System.Collections.Generic.List{System.ValueTuple{System.Int32,System.Int32,System.Int32,System.String}}
  commentId: T:System.Collections.Generic.List{System.ValueTuple{System.Int32,System.Int32,System.Int32,System.String}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<(int, int, int, string)>
  nameWithType: List<(int, int, int, string)>
  fullName: System.Collections.Generic.List<(int, int, int, string)>
  nameWithType.vb: List(Of (Integer, Integer, Integer, String))
  fullName.vb: System.Collections.Generic.List(Of (Integer, Integer, Integer, String))
  name.vb: List(Of (Integer, Integer, Integer, String))
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: )
- uid: Mekkdonalds.Persistence.LogFile.Events*
  commentId: Overload:Mekkdonalds.Persistence.LogFile.Events
  href: Mekkdonalds.Persistence.LogFile.html#Mekkdonalds_Persistence_LogFile_Events
  name: Events
  nameWithType: LogFile.Events
  fullName: Mekkdonalds.Persistence.LogFile.Events
- uid: System.Collections.Generic.List{System.Collections.Generic.List{System.ValueTuple{System.Int32,System.Int32,System.String}}}
  commentId: T:System.Collections.Generic.List{System.Collections.Generic.List{System.ValueTuple{System.Int32,System.Int32,System.String}}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<List<(int, int, string)>>
  nameWithType: List<List<(int, int, string)>>
  fullName: System.Collections.Generic.List<System.Collections.Generic.List<(int, int, string)>>
  nameWithType.vb: List(Of List(Of (Integer, Integer, String)))
  fullName.vb: System.Collections.Generic.List(Of System.Collections.Generic.List(Of (Integer, Integer, String)))
  name.vb: List(Of List(Of (Integer, Integer, String)))
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: )
  - name: )
- uid: Mekkdonalds.Persistence.LogFile.Tasks*
  commentId: Overload:Mekkdonalds.Persistence.LogFile.Tasks
  href: Mekkdonalds.Persistence.LogFile.html#Mekkdonalds_Persistence_LogFile_Tasks
  name: Tasks
  nameWithType: LogFile.Tasks
  fullName: Mekkdonalds.Persistence.LogFile.Tasks
- uid: System.Collections.Generic.List{System.ValueTuple{System.Int32,System.Int32,System.Int32}}
  commentId: T:System.Collections.Generic.List{System.ValueTuple{System.Int32,System.Int32,System.Int32}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<(int, int, int)>
  nameWithType: List<(int, int, int)>
  fullName: System.Collections.Generic.List<(int, int, int)>
  nameWithType.vb: List(Of (Integer, Integer, Integer))
  fullName.vb: System.Collections.Generic.List(Of (Integer, Integer, Integer))
  name.vb: List(Of (Integer, Integer, Integer))
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  - name: )
- uid: Mekkdonalds.Persistence.LogFile.#ctor*
  commentId: Overload:Mekkdonalds.Persistence.LogFile.#ctor
  href: Mekkdonalds.Persistence.LogFile.html#Mekkdonalds_Persistence_LogFile__ctor
  name: LogFile
  nameWithType: LogFile.LogFile
  fullName: Mekkdonalds.Persistence.LogFile.LogFile
  nameWithType.vb: LogFile.New
  fullName.vb: Mekkdonalds.Persistence.LogFile.New
  name.vb: New
